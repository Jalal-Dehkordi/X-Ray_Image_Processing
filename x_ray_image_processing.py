# -*- coding: utf-8 -*-
"""X-ray image processing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fbn-vvP_j6WHdmQSnQsiUGCvQVhfOFlj
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import cv2
from matplotlib import pyplot as plt

imagen_gris = cv2.imread('/content/drive/My Drive/rodilla.jfif', cv2.IMREAD_GRAYSCALE)

umbral_max = 255
umbral_min = 15

imagen_cutanea = cv2.inRange(imagen_gris, umbral_min, umbral_max)

imagenSegmentadaPorPiel = cv2.cvtColor(imagen_cutanea, cv2.COLOR_BGR2RGB)

plt.imshow(imagen_cutanea, cmap="gray")

umbral_max = 230
umbral_min = 80

imagen_musculos = cv2.inRange(imagen_gris, umbral_min, umbral_max)

imagenSegmentadaPorTejido = cv2.cvtColor(imagen_musculos, cv2.COLOR_BGR2RGB)

plt.imshow(imagen_musculos, cmap="gray")

img_rgb = cv2.cvtColor(imagen_gris, cv2.COLOR_BGR2RGB)

# Crear copias de la imagen para aislar cada canal
img_R = img_rgb.copy()
img_G = img_rgb.copy()
img_B = img_rgb.copy()

# Aislar el canal R
img_R[:, :, 1] = 0  # G
img_R[:, :, 2] = 0  # B

# Aislar el canal G
img_G[:, :, 0] = 0  # R
img_G[:, :, 2] = 0  # B

# Aislar el canal B
img_B[:, :, 0] = 0  # R
img_B[:, :, 1] = 0  # G

# Visualizar las imágenes
fig, ax = plt.subplots(1, 4, figsize=(20, 5))

ax[0].imshow(img_rgb)
ax[0].set_title("Imagen original")
ax[0].axis('off')

ax[1].imshow(img_R)
ax[1].set_title("Canal Rojo")
ax[1].axis('off')

ax[2].imshow(img_G)
ax[2].set_title("Canal Verde")
ax[2].axis('off')

ax[3].imshow(img_B)
ax[3].set_title("Canal Azul")
ax[3].axis('off')

plt.show()

imagen_G_gris = cv2.cvtColor(img_G, cv2.COLOR_RGB2GRAY)

hist = cv2.calcHist([imagen_G_gris], [0], None, [256], [0, 256])

# Visualizar la imagen y su histograma
fig, ax = plt.subplots(1, 2, figsize=(12, 5))

# Mostrar la imagen en escala de grises
ax[0].imshow(imagen_G_gris, cmap='gray')
ax[0].set_title("Imagen en Grises")
ax[0].axis('off')

# Mostrar el histograma
ax[1].plot(hist, color='black')
ax[1].set_title("Histograma")
ax[1].set_xlabel("Intensidad de Pixel")
ax[1].set_ylabel("Cantidad de Píxeles")
ax[1].grid(True)

plt.tight_layout()
plt.show()

result_not = cv2.bitwise_not(imagen_G_gris)

plt.imshow(result_not, cmap = 'gray')

laplacian = cv2.Laplacian(result_not, cv2.CV_64F)

plt.subplot(1, 2, 1)
plt.imshow(result_not, cmap='gray')
plt.title('Imagen Original')
plt.subplot(1, 2, 2)
plt.imshow(laplacian, cmap='gray')
plt.title('Imagen con Realce de Bordes')
plt.show()

blurred = cv2.GaussianBlur(result_not, (3, 3), 0)

sobel_x = cv2.Sobel(blurred, cv2.CV_64F, 1, 0, ksize=5)
sobel_y = cv2.Sobel(blurred, cv2.CV_64F, 0, 1, ksize=5)
gradient_magnitude = np.sqrt(sobel_x**2 + sobel_y**2)
plt.subplot(1, 2, 1)
plt.imshow(blurred, cmap='gray')
plt.title('Imagen Original')
plt.subplot(1, 2, 2)
plt.imshow(gradient_magnitude, cmap='gray')
plt.title('Magnitud del Gradiente')
plt.show()

result_not = cv2.bitwise_not(gradient_magnitude)

plt.imshow(result_not, cmap = 'turbo')

print(imagen_cutanea.shape)
res = gradient_magnitude + imagen_cutanea

print(res)
plt.imshow(res, cmap="gray")

hueso_gris = cv2.imread('/content/drive/My Drive/hueso.png', cv2.IMREAD_GRAYSCALE)

img_rgb = cv2.cvtColor(hueso_gris, cv2.COLOR_BGR2RGB)


imagen_G_gris = cv2.cvtColor(img_rgb, cv2.COLOR_RGB2GRAY)

hist = cv2.calcHist([imagen_G_gris], [0], None, [256], [0, 256])

# Visualizar la imagen y su histograma
fig, ax = plt.subplots(1, 2, figsize=(12, 5))

# Mostrar la imagen en escala de grises
ax[0].imshow(imagen_G_gris, cmap='gray')
ax[0].set_title("Imagen en Grises")
ax[0].axis('off')

# Mostrar el histograma
ax[1].plot(hist, color='blue')
ax[1].set_title("Histograma")
ax[1].set_xlabel("Intensidad de Pixel")
ax[1].set_ylabel("Cantidad de Píxeles")
ax[1].grid(True)

plt.tight_layout()
plt.show()

result_not = cv2.bitwise_not(img_G)

plt.imshow(result_not, cmap = 'copper')

imagen_G_gris = cv2.cvtColor(result_not, cv2.COLOR_RGB2GRAY)

hist = cv2.calcHist([imagen_G_gris], [0], None, [256], [0, 256])

# Visualizar la imagen y su histograma
fig, ax = plt.subplots(1, 2, figsize=(12, 5))

# Mostrar la imagen en escala de grises
ax[0].imshow(imagen_G_gris, cmap='gray')
ax[0].set_title("Imagen en Grises")
ax[0].axis('off')

# Mostrar el histograma
ax[1].plot(hist, color='black')
ax[1].set_title("Histograma")
ax[1].set_xlabel("Intensidad de Pixel")
ax[1].set_ylabel("Cantidad de Píxeles")
ax[1].grid(True)

plt.tight_layout()
plt.show()

umbral_max = 255
umbral_min = 216

imagen_hueso = cv2.inRange(imagen_G_gris, umbral_min, umbral_max)

imagenSegmentadaPorHueso2 = cv2.cvtColor(imagen_hueso, cv2.COLOR_BGR2RGB)

plt.imshow(imagen_hueso, cmap="gray")

result_not2 = cv2.bitwise_not(imagenSegmentadaPorHueso2)

plt.imshow(result_not2, cmap = 'gray')
imagen_tejido = result_not2

